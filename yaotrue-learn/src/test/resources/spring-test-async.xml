<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd   
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<context:annotation-config />
	<!--扫描注解 -->
	<context:component-scan base-package="com.yaotrue.framework.spring.async" />
	<!-- 支持异步方法执行 -->
	<!-- <task:annotation-driven /> -->

	<task:executor id="executor" pool-size="10" />
	<!-- 名字必须是applicationEventMulticaster和messageSource是一样的，默认找这个名字的对象 -->
	<!-- 名字必须是applicationEventMulticaster，因为AbstractApplicationContext默认找个 -->
	<!-- 如果找不到就new一个，但不是异步调用而是同步调用 -->
	<bean id="applicationEventMulticaster"
		class="org.springframework.context.event.SimpleApplicationEventMulticaster">
		<!-- 注入任务执行器 这样就实现了异步调用（缺点是全局的，要么全部异步，要么全部同步（删除这个属性即是同步）） -->
		<property name="taskExecutor" ref="executor" />
	</bean>
</beans>